{
    "displayName": "Python Visualizer",
    "description": "Bring your Python code to life with interactive visualizations.",
    "pythonVisualizer.showVisualizer.title": "Open Visualizer",
    "pythonVisualizer.showVisualizerToSide.title": "Open Visualizer to the Side",
    "pythonVisualizer.showLockedVisualizerToSide.title": "Open Locked Visualizer to the Side",
    "pythonVisualizer.showSource.title": "Show Source",
    "pythonVisualizer.refresh.title": "Refresh Visualizer",
    "pythonVisualizer.toggleLock.title": "Toggle Visualizer Locking",
    "pythonVisualizer.disableHeapNesting.desc": "Set how heap objects should be rendered. \"true\" render all heap objects at the top level. Otherwise, nest heap objects.",
    "pythonVisualizer.pythonPath.desc": "Case 1: \"official VS Code Python extension\" is installed (recommended):\n\nWhen you have the \"official VS Code Python extension\" installed, this extension seamlessly adopts its pythonPath.\n\nCase 2: \"official VS Code Python extension\" is not installed:\n\nIf you wish to set up a specific pythonPath, configuring it in Python Visualizer's settings is easy. Just type the absolute path to your desired Python executable in the field below. If you leave the \"pythonPath\" field empty in Python Visualizer's settings, the extension will automatically apply defaults based on your platform. On Windows, it will use the \"py\" command. On other platforms, it will use \"python3\".",
    "pythonVisualizer.envFile.desc": "Specify the full path to a file containing environment variable definitions. If left blank and the official VS Code Python extension is installed, the value will be retrieved from the official extension's settings. If the official Python extension is not installed, the default path will be ${workspaceFolder}/.env.",
    
    "pythonVisualizer.textualMemoryLabels.desc": "Render refrences using textual memory labels rather than as jsPlumb arrows.",
    "pythonVisualizer.compactFuncLabels.desc": "Render functions with a 'func' prefix and not type label.",
    "pythonVisualizer.showAllFrameLabels.desc": "Display frame and parent frame labels for all functions.",
    "pythonVisualizer.hideCode.desc": "Hide the code display.",
    "pythonVisualizer.codAndNavWidth.desc": "Set code and navigation area width.",
    "pythonVisualizer.allowAllModules.desc": "Set whether all modules can be imported.",
    "pythonVisualizer.maxExecutedLines.desc": "Set the max number of executed lines, if you want to guard against infinite loops.",
    "pythonVisualizer.cumulativeMode.desc": "Display all stack frames that have ever exited rather than only currently on the stack.",
    "pythonVisualizer.trace.desc": "Enable debug logging for the python-visualizer extension.",
    
    "pythonVisualizer.fontFamily.desc": "Control the font family used in the python visualizer.",
    "pythonVisualizer.fontSize.desc": "Control the font size in pixels used in the python visualizer.",
    "pythonVisualizer.langDisplay.fontFamily.desc": "Control the font family used in the lang display area.",
    "pythonVisualizer.langDisplay.fontSize.desc": "Control the font size in pixels used in the lang display area.",
    "pythonVisualizer.code.fontFamily.desc": "Control the font family used in the code display area.",
    "pythonVisualizer.code.fontSize.desc": "Control the font size in pixels in the code display area.",
    "pythonVisualizer.code.lineHeight.desc": "Control the line height used in the code.",
    "pythonVisualizer.legend.fontFamily.desc": "Control the font family used in the arrow legend.",
    "pythonVisualizer.legend.fontSize.desc": "Control the font size in pixels used in the arrow legend.",
    "pythonVisualizer.codeFooterDocs.fontFamily.desc": "Control the font family used in the code footer docs.",
    "pythonVisualizer.codeFooterDocs.fontSize.desc": "Control the font size in pixels used in the code footer docs.",
    "pythonVisualizer.printOutputDocs.fontFamily.desc": "Control the font family used int the print output docs.",
    "pythonVisualizer.printOutputDocs.fontSize.desc": "Control the font size in pixels in the print output docs.",
    "pythonVisualizer.pyStdout.fontSize.desc": "Control the font size in pixels used in the python stdout window.",
    "pythonVisualizer.pyStdout.fontFamily.desc": "Control the font family used in the python stdout window.",
    "pythonVisualizer.stackAndHeapHeader.fontFamily.desc": "Control the font family used in the stack header and heap header.",
    "pythonVisualizer.stackAndHeapHeader.fontSize.desc": "Control the font size in pixels used in the stack header and heap header.",
    "pythonVisualizer.stackFrame.fontFamily.desc": "Control the font family used in the stack frame.",
    "pythonVisualizer.stackFrame.fontSize.desc": "Control the font size in pixels used in the stack frame.",
    "pythonVisualizer.retVal.fontSize.desc": "Control the font size in pixels used in the function return value.",
    "pythonVisualizer.stackFrameHeader.fontFamily.desc": "Control the font family used in the stack frame header.",
    "pythonVisualizer.stackFrameHeader.fontSize.desc": "Control the font size in pixels used in the stack frame header.",
    "pythonVisualizer.heapObject.fontFamily.desc": "Control the font family used in the heap object.",
    "pythonVisualizer.heapObject.fontSize.desc": "Control the font size in pixels used in the heap object.",
    "pythonVisualizer.typeLabel.fontFamily.desc": "Control the font family used in the type label of heap object.",
    "pythonVisualizer.typeLabel.fontSize.desc": "Control the font size in pixels used in the type label of heap object.",

    "pythonVisualizer.light.highlightedArrow.color.desc": "Control the color used in highlighted arrow in vscode light theme.",
    "pythonVisualizer.light.highlightedStackFrame.bgColor.desc": "Control the background color used in highlighted stack frame in vscode light theme.",
    "pythonVisualizer.light.list-tuple-setTbl.bgColor.desc": "Control the background color used in list, tuple and set in vscode light theme.",
    "pythonVisualizer.light.dict-class-instKey.bgColor.desc": "Control the background color used in dict, class and instance key in vscode light theme.",
    "pythonVisualizer.light.dict-class-instVal.bgColor.desc": "Control the background color used in dict, class and instance value in vscode light theme.",
    "pythonVisualizer.dark.highlightedArrow.color.desc": "Control the color used in highlighted arrow in vscode dark theme.",
    "pythonVisualizer.dark.highlightedStackFrame.bgColor.desc": "Control the background color used in highlighted stack frame in vscode dark theme.",
    "pythonVisualizer.dark.list-tuple-setTbl.bgColor.desc": "Control the background color used in list, tuple and set in vscode dark theme.",
    "pythonVisualizer.dark.dict-class-instKey.bgColor.desc": "Control the background color used in dict, class and instance key in vscode dark theme.",
    "pythonVisualizer.dark.dict-class-instVal.bgColor.desc": "Control the background color used in dict, class and instance value in vscode dark theme.",
    "pythonVisualizer.high-contrast.highlightedArrow.color.desc": "Control the color used in highlighted stack frame in vscode high-contrast theme.",
    "pythonVisualizer.high-contrast.highlightedStackFrame.bgColor.desc": "Control the background color used in highlighted stack frame in vscode high-contrast theme.",
    "pythonVisualizer.high-contrast.list-tuple-setTbl.bgColor.desc": "Control the background color used in list, tuple and set in vscode high-contrast theme.",
    "pythonVisualizer.high-contrast.dict-class-instKey.bgColor.desc": "Control the background color used in dict, class and instance key in vscode high-contrast theme.",
    "pythonVisualizer.high-contrast.dict-class-instVal.bgColor.desc": "Control the background color used in dict, class and instance value in vscode high-contrast theme."
}